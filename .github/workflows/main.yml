name: Build-release

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Select build type'
        required: true
        default: 'all'
        type: choice
        options:
          - single
          - all
      device:
        description: 'Select device to build (for single build)'
        required: false
        default: 'd1'
        type: choice
        options:
          - d1
          - d1xks
          - d2s
          - d2x
      create_release:
        description: 'Create automatic release?'
        required: true
        default: 'yes'
        type: choice
        options:
          - yes
          - no

  push:
    branches: [ main, master ]
    tags:
      - 'v*'

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        device: 
          - d1
          - d1xks
          - d2s
          - d2x

    steps:
      - name: "⏰Set Time Zone to Asia"
        run: |
          sudo timedatectl set-timezone "Asia/Jakarta"

      - name: "🚄Set up build environment"
        run: |
          sudo apt-get update
          sudo apt-get install -y git-core flex bison build-essential zip curl \
          zlib1g-dev libc6-dev-i386 lib32z1-dev unzip

      - name: "⭐Checkout repository with submodules"
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Update submodules
        run: |
          git submodule update --init --recursive
          git submodule update --remote

      - name: "💡 Setup KernelSu"
        run: |
          if [ -d "./KernelSU-Next" ]; then rm -rf "./KernelSU-Next"; fi
          if [ -d "./drivers/KernelSU-Next" ]; then rm -rf "./drivers/KernelSU-Next"; fi 
          curl -LSs "https://raw.githubusercontent.com/GoRhanHee/KernelSU-Next/refs/heads/next-susfs/kernel/setup.sh" | bash -

      - name: "🔍 Check KernelSU Version Compatibility"
        run: |
          echo "Checking KernelSU version and compatibility..."
          if [ -d "KernelSU-Next" ]; then
            cd KernelSU-Next
            git log --oneline -5
            cd ..
          fi

      - name: "😄 Setup and Apply susfs4ksu Patches (with fallback)"
        run: |
          set -e
          
          # Clone susfs4ksu repository
          git clone https://github.com/Star-Seven/susfs4ksu -b M62-backport-1.5.9 susfs4ksu-repo
          
          # Backup original files that will be patched
          echo "Backing up files that will be patched..."
          cp -r kernel kernel_backup
          cp -r fs fs_backup
          cp -r include include_backup
          
          # Copy patches
          cp susfs4ksu-repo/kernel_patches/fs/* fs/
          cp susfs4ksu-repo/kernel_patches/include/linux/* include/linux/
          
          cd ..
          
          # Apply main kernel patch
          echo "Applying main susfs4ksu patch..."
          patch -p1 -l -F 10 < susfs4ksu-repo/kernel_patches/50_add_susfs_in_kernel-4.14.patch || {
            echo "Main patch partially applied. Checking for reject files..."
            find . -name "*.rej" -exec echo "Reject file found: {}" \;
          }
          
          echo "Patch application completed (with possible partial success)"

      - name: "🐎Build for specific device"
        run: ./build.sh -m ${{ matrix.device }} -k Y -r N

      - name: "💫Prepare ZIP files for upload"
        run: |
          mkdir -p ${{ github.workspace }}/build/out/zip_files
          find ${{ github.workspace }}/build/out/ -type f -name "*.zip" -exec cp {} ${{ github.workspace }}/build/out/zip_files/ \;

      - name: "😎Upload ZIP files as artifact"
        uses: actions/upload-artifact@v4
        with:
          name: "ExtremeKRNL-Nexus-Susfs-${{ matrix.device }}"
          path: ${{ github.workspace }}/build/out/zip_files/

  # DEBUG JOB - WAJIB untuk troubleshoot
  debug-trigger:
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: "🔍 Debug Trigger Information"
        run: |
          echo "=== TRIGGER DEBUG ==="
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Run Number: ${{ github.run_number }}"
          echo "Actor: ${{ github.actor }}"
          
          echo ""
          echo "=== MANUAL INPUTS ==="
          echo "Build Type: ${{ github.event.inputs.build_type }}"
          echo "Device: ${{ github.event.inputs.device }}"
          echo "Create Release: ${{ github.event.inputs.create_release }}"
          
          echo ""
          echo "=== RELEASE CONDITIONS ==="
          echo "Push to main/master: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') }}"
          echo "Manual with release: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.create_release == 'yes' }}"
          echo "Push tag: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}"
          
          echo ""
          echo "=== FINAL DECISION ==="
          echo "Should run release job: ${{ (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')) || (github.event_name == 'workflow_dispatch' && github.event.inputs.create_release == 'yes') }}"

  release:
    name: Create Release
    needs: [build, debug-trigger]
    runs-on: ubuntu-24.04
    
    # CONDITION YANG LEBIH EXPLICIT
    if: ${{ (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')) || (github.event_name == 'workflow_dispatch' && github.event.inputs.create_release == 'yes') }}
    
    steps:
      - name: "🎯 Release Job Started"
        run: |
          echo "✅ RELEASE JOB IS RUNNING!"
          echo "This means the condition passed:"
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Create Release Input: ${{ github.event.inputs.create_release }}"
          
      - name: "📥 Download build artifacts"
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: "📦 Prepare release assets"
        run: |
          mkdir -p release_assets
          find artifacts -name "*.zip" -type f -exec cp {} release_assets/ \;
          echo "Assets for release:"
          ls -la release_assets/
          echo "Total ZIP files: $(ls -1 release_assets/ | wc -l)"
          
      - name: "🏷️ Generate Release Version"
        id: version
        run: |
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          SHORT_SHA="${{ github.sha }}"
          SHORT_SHA="${SHORT_SHA:0:7}"
          
          if [ "${{ github.event_name }}" == "push" ]; then
            if [ "${{ github.ref }}" == "refs/heads/main" ] || [ "${{ github.ref }}" == "refs/heads/master" ]; then
              VERSION="auto-${TIMESTAMP}-${SHORT_SHA}"
              RELEASE_NAME="Auto Build ${TIMESTAMP}"
            else
              VERSION="tag-${TIMESTAMP}"
              RELEASE_NAME="Tag Build ${TIMESTAMP}"
            fi
          else
            VERSION="manual-${TIMESTAMP}-${{ github.run_number }}"
            RELEASE_NAME="Manual Build ${TIMESTAMP}"
          fi
          
          echo "tag_name=${VERSION}" >> $GITHUB_OUTPUT
          echo "release_name=${RELEASE_NAME}" >> $GITHUB_OUTPUT
          echo "🎯 Generated: ${VERSION}"
          
      - name: "🚀 Create GitHub Release"
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag_name }}
          name: ${{ steps.version.outputs.release_name }}
          files: release_assets/*.zip
          generate_release_notes: true
          body: |
            ## 🎉 ExtremeKRNL Nexus Susfs
            
            ### 📋 Build Info
            - **Version:** ${{ steps.version.outputs.tag_name }}
            - **Build Date:** $(date -u +'%Y-%m-%d %H:%M:%S UTC')
            - **Trigger:** ${{ github.event_name }}
            - **Workflow Run:** #${{ github.run_number }}
            
            ### 📱 Devices
            - d1, d1xks, d2s, d2x
            
            ### ⚡ Features
            - KernelSU Next + SUSFS4KSU
            
            ---
            *Created by GitHub Actions Run #${{ github.run_number }}*

      - name: "✅ Release Created Successfully"
        run: |
          echo "🎉 RELEASE CREATED: ${{ steps.version.outputs.tag_name }}"
          echo "📝 This release was created by THIS workflow run"
          echo "🔗 Check: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.tag_name }}"

  no-release:
    runs-on: ubuntu-24.04
    needs: [build, debug-trigger]
    if: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.create_release == 'no') || (github.event_name == 'push' && github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/')) }}
    
    steps:
      - name: "📋 No Release Summary"
        run: |
          echo "✅ Build completed - NO RELEASE CREATED"
          echo "📦 Artifacts available in Actions tab"
          echo ""
          echo "Why no release?"
          echo "- Manual with release=no: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.create_release == 'no' }}"
          echo "- Push to other branch: ${{ github.event_name == 'push' && github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/') }}"