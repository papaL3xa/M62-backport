name: Build-Test

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Select build type'
        required: true
        default: 'all'
        type: choice
        options:
          - single
          - all
      device:
        description: 'Select device to build (for single build)'
        required: false
        default: 'd1'
        type: choice
        options:
          - d1
          - d1xks
          - d2s
          - d2x
  push:
    tags:
      - 'v1.0.0'

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        device: 
          - d1
          - d1xks
          - d2s
          - d2x

    steps:
      - name: "‚è∞Set Time Zone to Asia"
        run: |
          sudo timedatectl set-timezone "Asia/Jakarta"

      - name: "üöÑSet up build environment"
        run: |
          sudo apt-get update
          sudo apt-get install -y git-core flex bison build-essential zip curl \
          zlib1g-dev libc6-dev-i386 lib32z1-dev unzip

      - name: "‚≠êCheckout repository with submodules"
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Update submodules
        run: |
          git submodule update --init --recursive
          git submodule update --remote

      - name: "üí° Setup KernelSu"
        run: |
          if [ -d "./KernelSU-Next" ]; then rm -rf "./KernelSU-Next"; fi
          if [ -d "./drivers/KernelSU-Next" ]; then rm -rf "./drivers/KernelSU-Next"; fi 
          curl -LSs "https://raw.githubusercontent.com/Star-Seven/KernelSU-Next/next/kernel/setup.sh" | bash -

      - name: "üîç Check KernelSU Version Compatibility"
        run: |
          echo "Checking KernelSU version and compatibility..."
          if [ -d "KernelSU-Next" ]; then
            cd KernelSU-Next
            git log --oneline -5
            cd ..
          fi

      - name: "üòÑ Setup and Apply susfs4ksu Patches (with fallback)"
        run: |
          set -e
          
          # Clone susfs4ksu repository
          git clone https://github.com/Star-Seven/susfs4ksu -b M62-backport-1.5.9 susfs4ksu-repo
          
          # Backup original files that will be patched
          echo "Backing up files that will be patched..."
          cp -r kernel kernel_backup
          cp -r fs fs_backup
          cp -r include include_backup
          
          # Copy patches
          cp susfs4ksu-repo/kernel_patches/fs/* fs/
          cp susfs4ksu-repo/kernel_patches/include/linux/* include/linux/
          
          cd ..
          
          # Apply main kernel patch
          echo "Applying main susfs4ksu patch..."
          patch -p1 -l -F 10 < susfs4ksu-repo/kernel_patches/50_add_susfs_in_kernel-4.14.patch || {
            echo "Main patch partially applied. Checking for reject files..."
            find . -name "*.rej" -exec echo "Reject file found: {}" \;
          }
          
          echo "Patch application completed (with possible partial success)"

      - name: "üêéBuild for specific device"
        run: ./build.sh -m ${{ matrix.device }} -k Y -r N

      - name: "üí´Prepare ZIP files for upload"
        run: |
          mkdir -p ${{ github.workspace }}/build/out/zip_files
          find ${{ github.workspace }}/build/out/ -type f -name "*.zip" -exec cp {} ${{ github.workspace }}/build/out/zip_files/ \;

      - name: "üòéUpload ZIP files as artifact"
        uses: actions/upload-artifact@v4
        with:
          name: "ExtremeKRNL-Nexus-Susfs-${{ matrix.device }}"
          path: ${{ github.workspace }}/build/out/zip_files/

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-24.04
    # Hanya jalankan jika push tag
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: "üì• Download build artifacts"
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: "üì¶ Prepare release assets"
        run: |
          mkdir -p release_assets
          # Collect all zip files from artifacts
          find artifacts -name "*.zip" -type f -exec cp {} release_assets/ \;
          echo "Assets prepared for release:"
          ls -la release_assets/
          echo "Total files: $(ls -1 release_assets/ | wc -l)"
          
      - name: "üöÄ Create GitHub Release"
        uses: softprops/action-gh-release@v1
        with:
          files: release_assets/*.zip
          generate_release_notes: true
          body: |
            ## üéâ ExtremeKRNL Nexus Susfs Update
            
            ### üìã Build Information
            - **Version:** ${{ github.ref_name }}
            - **Build Date:** $(date -u +'%Y-%m-%d %H:%M:%S UTC')
            - **KernelSU:** Next Integration
            - **SUSFS:** Backport 1.5.9 Applied
            
            ### üì± Supported Devices
            - d1, d1xks, d2s, d2x
            
            ### ‚ö° Features
            - ‚úÖ KernelSU Next support
            - ‚úÖ SUSFS4KSU integration  
            - ‚úÖ Enhanced performance
            - ‚úÖ Security patches
            - ‚úÖ Custom optimizations
            
            ### üì• Installation Guide
            1. Download the appropriate ZIP file for your device
            2. Flash via custom recovery (OrangeFox, TWRP)
            3. Wipe cache/dalvik
            4. Reboot system
            
            ### ‚ö†Ô∏è Important Notes
            - üîÑ Make sure to backup your data before flashing
            - üì≤ Use compatible firmware version
            - üîß Report issues with proper logs
            
            ---
            *Built automatically with GitHub Actions ‚Ä¢ [Report Issues](https://github.com/${{ github.repository }}/issues)*

  manual-build-summary:
    runs-on: ubuntu-24.04
    needs: build
    # Hanya jalankan untuk manual dispatch (bukan tag push)
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: "üìã Manual Build Summary"
        run: |
          echo "‚úÖ Build completed successfully!"
          echo "üì¶ Build Type: ${{ github.event.inputs.build_type || 'all' }}"
          echo "üì± Device(s): ${{ github.event.inputs.device || 'All devices (d1, d1xks, d2s, d2x)' }}"
          echo "‚è∞ Trigger: Manual workflow dispatch"
          echo ""
          echo "üì• Artifacts are available in the Actions tab for manual download"
          echo "üîó GitHub Actions URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo ""
          echo "üí° To create an automatic release, push a tag:"
          echo "   git tag v1.0.0"
          echo "   git push origin v1.0.0"